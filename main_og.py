# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os.path
import sys

from PyQt6.QtCore import QRunnable, QThreadPool, pyqtSlot, QUrl
from PyQt6.QtWebEngineWidgets import QWebEngineView
from PyQt5.QtGui import QColor

import main_logic
from PyQt6 import QtCore, QtGui, QtWidgets

class ProcessRunnable(QRunnable):
    def __init__(self, target, args):
        QRunnable.__init__(self)
        self.t = target
        self.args = args

    def run(self):
        self.t(*self.args)

    def start(self):
        QThreadPool.globalInstance().start(self)

class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self, parent=None):
        super(Ui_MainWindow, self).__init__(parent)
        self.org_apkname = ''
        self.mod_apkname = ''
        self.mainfolder = ''
        self.setupUi(self)
        self.diff_files = {}

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1600, 900)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 30, 671, 51))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")

        self.verticalStatus = QtWidgets.QWidget(self.centralwidget)
        self.verticalStatus.setGeometry(QtCore.QRect(890, 30, 680, 200))
        self.verticalStatus.setObjectName("verticalStatus")
        self.verticalStatusLayout = QtWidgets.QVBoxLayout(self.verticalStatus)
        self.verticalStatusLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalStatusLayout.setObjectName("verticalStatusLayout")
        self.statusLine = QtWidgets.QPlainTextEdit('Ready...')
        self.verticalStatusLayout.addWidget(self.statusLine)

        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.org_apk_lineedit = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.org_apk_lineedit.setObjectName("org_apk_lineedit")
        self.horizontalLayout.addWidget(self.org_apk_lineedit)
        self.org_apk_button = QtWidgets.QToolButton(self.verticalLayoutWidget)
        self.org_apk_button.setObjectName("org_apk_button")
        self.org_apk_button.clicked.connect(lambda:self.openOrgAPK())
        self.horizontalLayout.addWidget(self.org_apk_button)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 90, 671, 51))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.mod_apk_lineedit = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.mod_apk_lineedit.setObjectName("mod_apk_lineedit")
        self.horizontalLayout_2.addWidget(self.mod_apk_lineedit)
        self.mod_apk_button = QtWidgets.QToolButton(self.verticalLayoutWidget_2)
        self.mod_apk_button.setObjectName("mod_apk_button")
        self.mod_apk_button.clicked.connect(lambda:self.openModAPK())
        self.horizontalLayout_2.addWidget(self.mod_apk_button)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(10, 150, 671, 61))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.extract_button = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.extract_button.setObjectName("extract_button")
        self.extract_button.clicked.connect(lambda:self.onExtract())
        self.horizontalLayout_3.addWidget(self.extract_button)
        self.decompile_button = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.decompile_button.setObjectName("decompile_button")
        self.decompile_button.clicked.connect(lambda: self.onDecompile())
        self.horizontalLayout_3.addWidget(self.decompile_button)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_4.setGeometry(QtCore.QRect(10, 220, 321, 61))
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.min_byte_spinner = QtWidgets.QSpinBox(self.horizontalLayoutWidget_4)
        self.min_byte_spinner.setObjectName("min_byte_spinner")
        self.min_byte_spinner.setMaximum(2000)
        self.horizontalLayout_4.addWidget(self.min_byte_spinner)
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)
        self.diff_button = QtWidgets.QPushButton(self.horizontalLayoutWidget_4)
        self.diff_button.setObjectName("diff_button")
        self.diff_button.clicked.connect(lambda:self.onDiff())
        self.horizontalLayout_4.addWidget(self.diff_button)
        self.horizontalLayout_5.addLayout(self.horizontalLayout_4)
        self.horizontalLayoutWidget_5 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_5.setGeometry(QtCore.QRect(210, 290, 1360, 580))
        self.horizontalLayoutWidget_5.setObjectName("horizontalLayoutWidget_5")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_5)
        self.horizontalLayout_6.setContentsMargins(5, 5, 5, 5)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")

        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(10, 290, 190, 580))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_4.addWidget(self.label_4)
        self.diff_listview = QtWidgets.QListWidget(self.verticalLayoutWidget_4)
        self.diff_listview.setObjectName("diff_listview")
        self.diff_listview.itemClicked.connect(self.onDiffList)
        self.verticalLayout_4.addWidget(self.diff_listview)

        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(210, 290, 59, 13))
        self.label_5.setObjectName("label_5")
        self.webView = QWebEngineView(self.centralwidget)
        self.webView.setGeometry(QtCore.QRect(210, 310, 1031, 661))
        h = "<html><body><code>no file loaded</code></body></html>"
        self.webView.setHtml(h)
        self.webView.setObjectName("webView")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1257, 18))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Original APK:"))
        self.org_apk_lineedit.setText(_translate("MainWindow", "open apk..."))
        self.org_apk_button.setText(_translate("MainWindow", "..."))
        self.label_2.setText(_translate("MainWindow", "Modded APK:"))
        self.mod_apk_lineedit.setText(_translate("MainWindow", "open apk..."))
        self.mod_apk_button.setText(_translate("MainWindow", "..."))
        self.extract_button.setText(_translate("MainWindow", "1. Extract Dex"))
        self.decompile_button.setText(_translate("MainWindow", "3. Decompile"))
        self.label_3.setText(_translate("MainWindow", "Min Byte Difference"))
        self.diff_button.setText(_translate("MainWindow", "2. Get Differing Files"))
        self.label_4.setText(_translate("MainWindow", "Choose File"))
        self.label_5.setText(_translate("MainWindow", "File Diff"))


    def openOrgAPK(self):
        fileName, _ = QtWidgets.QFileDialog.getOpenFileName(self, "Open File", "", "APK Files (*.apk)")
        if fileName:
            self.org_apk_lineedit.setText(fileName)
            temp = fileName.split('/')
            self.org_apkname = temp[-1]
            if not os.path.exists(fileName.strip('.apk')):
                os.mkdir(fileName.strip('.apk'))
            os.chdir(fileName.strip('.apk'))
            self.mainfolder = fileName.strip('.apk')
            print(os.path.curdir)

    def openModAPK(self):
        fileName, _ = QtWidgets.QFileDialog.getOpenFileName(self, "Open File", "", "APK Files (*.apk)")
        if fileName:
            self.mod_apk_lineedit.setText(fileName)
            temp = fileName.split('/')
            self.mod_apkname = temp[-1]

    def onExtract(self):
        if self.mainfolder == '':
            return
        self.p1 = ProcessRunnable(target=main_logic.extract, args=(self.org_apkname, True, False, self))
        self.p1.start()
        self.p2 = ProcessRunnable(target=main_logic.extract, args=(self.mod_apkname, True, True, self))
        self.p2.start()

    def onDecompile(self):
        if self.mainfolder == '':
            return
        self.diff_files.clear()
        self.diff_listview.clear()
        self.p0 = ProcessRunnable(target=main_logic.decompile, args=(self.mainfolder, self))
        self.p0.start()

    @pyqtSlot()
    def showFiles(self):
        diff_files = open('diff.txt', 'r')
        for file in diff_files:
            single_name = ((file.strip().split('/'))[-1]).replace('.class', '.java')
            fullpath = 'diff_files/'+(single_name.replace('.java', '.diff'))
            self.diff_files.update({single_name: fullpath})
            item = QtWidgets.QListWidgetItem(single_name)
            self.diff_listview.addItem(item)

    def onDiff(self):
        self.p3 = ProcessRunnable(target=main_logic.compare, args=(self.min_byte_spinner.value(), self.mainfolder, self))
        self.p3.start()
        self.p4 = ProcessRunnable(target=main_logic.copy_diffs, args=(self.mainfolder, self))
        self.p4.start()

    def onDiffList(self, item):
        if not os.path.exists('html'):
            os.mkdir('html')

        if not os.path.exists("html/{}".format((item.text()).replace(".java", ".html"))):
            filenames = ['../part1.html', self.diff_files.get(item.text()), '../part2.html']
            with open('html/{}'.format((item.text()).replace(".java", ".html")), 'w+') as outfile:
                for fname in filenames:
                    with open(fname) as infile:
                        outfile.write(infile.read())
        self.webView.setUrl(QUrl("file://{}".format(os.path.abspath("html/{}".format((item.text()).replace(".java", ".html"))))))

    @pyqtSlot(str, bool)
    def updateStatus(self, message, highlight):
        self.statusLine.appendPlainText(message)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    app.setWindowIcon(QtGui.QIcon('android-icon.jpg'))
    mainWin = Ui_MainWindow()
    mainWin.show()
    sys.exit(app.exec())
